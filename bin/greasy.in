#!/bin/sh

# Some setup parameters
COMMAND=`echo $_ | rev | cut -d"/" -f1 | rev`
GREASY_BINDIR=@greasy_bindir@
GREASY_CONFDIR=@greasy_etcdir@
EXE=$GREASY_BINDIR/greasybin

# Check if the script is launched using any kind of spawner
if [ "$COMMAND" != "greasy" ]; then
  echo "Usage: greasy -f <taskfile.txt>"
  echo "Please rerun greasy without putting $COMMAND before"
  exit
fi

# Decide which type of launcher to use depending on the engine selected.
if [ -z "$GREASY_ENGINE" ]; then
  GREASY_ENGINE=`cat $GREASY_CONFDIR/greasy.conf | grep "^[[:blank:]]*Engine=.*$"| tail -n1 | cut -d= -f 2 | cut -d" " -f1`
fi

# Decide which type of launcher to use depending on the engine selected.
if [ -z "$GREASY_LAUNCHER" ]; then
  GREASY_LAUNCHER=`cat $GREASY_CONFDIR/greasy.conf | grep "^[[:blank:]]*BasicRemoteMethod=.*$"| tail -n1 | cut -d= -f 2 | cut -d" " -f1`
fi


if [[ "$GREASY_ENGINE" = "mpi" || "$GREASY_ENGINE" = "MPI" ]]; then
  MPIRUN=@machine_mpirun@
	#this avoid 100% cpu usage for the master
#	export I_MPI_WAIT_MODE=1
	# export I_MPI_PIN="disable"
	# export OMPI_MCA_mpi_yield_when_idle=1
else
  MPIRUN=""
fi

# If running inside a slurm job, append the jobid to the log.
if [ -z "$GREASY_LOGFILE" ]; then
 if [ -n "$LSB_BATCH_JID" ];
	then
		export GREASY_LOGFILE=greasy-$LSB_BATCH_JID.log
	else
		if [ -n "$SLURM_JOBID" ]; then
			export GREASY_LOGFILE=greasy-$SLURM_JOBID.log
		fi
	fi
fi

# Use Slurm configuration to setup worker and node if present
# New addition
if [ "$GREASY_ENGINE" = "basic" ] && [ "$GREASY_LAUNCHER" = "srun" ]; then
  __nnodes=1
  if [[ -n $SLURM_NNODES ]]; then
    __nnodes=$SLURM_NNODES
  elif [[ -n $SLURM_NODELIST ]]; then
    __nnodes=`hostlist -n $SLURM_NODELIST`
  fi

  __ntasks=1
  if [[ -n $SLURM_NTASKS ]]; then
    __ntasks=$SLURM_NTASKS
  fi

  __ntasks_per_node=1
  if [[ -n $SLURM_NTASKS_PER_NODE ]]; then
    __ntasks_per_node=$SLURM_NTASKS_PER_NODE
  elif [[ -n $SLURM_TASKS_PER_NODE ]]; then
    __ntasks_per_node=`echo $SLURM_TASKS_PER_NODE | awk -F'(' '{print $1}'`
  fi

  # Assume a serial application - assign all available tasks to workers
  # This is the default GREASY behavior
  __greasy_nworkers_per_node="${__ntasks_per_node}(x${__nnodes})"

  # Check if user has defined GREASY_NWORKERS_PER_NODE
  # In this case, the user is giving us full control over the number of workers and on the nodelist
  # This option should be the prefered one for distributed (MPI) and shared memory (OpenMP) applications
  if [[ -n "$GREASY_NWORKERS_PER_NODE" ]]; then
    if [ $GREASY_NWORKERS_PER_NODE -gt ${__ntasks_per_node} ]; then
      export GREASY_NWORKERS_PER_NODE=${__ntasks_per_node}
    elif [ $GREASY_NWORKERS_PER_NODE -lt 1 ]; then
      export GREASY_NWORKERS_PER_NODE=1
    fi
    __greasy_nworkers_per_node="${GREASY_NWORKERS_PER_NODE}(x${__nnodes})"
    export GREASY_NODELIST=`hostlist --repeat-slurm-tasks=${__greasy_nworkers_per_node} --expand --sep "," $SLURM_NODELIST`
    export GREASY_NWORKERS=`echo $GREASY_NODELIST | awk -F',' '{print NF}'`
  fi

  if [[ -n "$GREASY_NWORKERS" && -z "$GREASY_NWORKERS_PER_NODE" ]]; then
    if [ $GREASY_NWORKERS -gt ${__ntasks} ]; then
      export GREASY_NWORKERS=${__ntasks}
    elif [ $GREASY_NWORKERS -lt ${__nnodes} ]; then
      export GREASY_NWORKERS=${__nnodes}
    fi
    export GREASY_NWORKERS_PER_NODE=`echo "$GREASY_NWORKERS / ${__nnodes}" | bc`
    __greasy_nworkers_per_node="${GREASY_NWORKERS_PER_NODE}(x${__nnodes})"

    export GREASY_NODELIST=`hostlist --repeat-slurm-tasks=${__greasy_nworkers_per_node} --expand --sep "," $SLURM_NODELIST`
  fi

  if [[ -n "$GREASY_NODELIST" && -z "$GREASY_NWORKERS" && -z "$GREASY_NWORKERS_PER_NODE" ]]; then
    echo "Defining GREASY_NODELIST is deprecated. Please use GREASY_NWORKERS or GREASY_NWORKERS_PER_NODE"
    exit
  fi

  if [[ -z "$GREASY_NWORKERS_PER_NODE" ]]; then
    export GREASY_NWORKERS_PER_NODE=${__ntasks_per_node}
    __greasy_nworkers_per_node="${GREASY_NWORKERS_PER_NODE}(x${__nnodes})"
  fi

  if [[ -z "$GREASY_NWORKERS" ]]; then
    export GREASY_NODELIST=`hostlist --repeat-slurm-tasks=${__greasy_nworkers_per_node} --expand --sep "," $SLURM_NODELIST`
    export GREASY_NWORKERS=`echo $GREASY_NODELIST | awk -F',' '{print NF}'`
  fi

  export GREASY_NTASKS_PER_WORKER=`echo "${__ntasks_per_node} / ${GREASY_NWORKERS_PER_NODE}" | bc`

fi

# echo "Inside GREASY.in"
# echo "GREASY_ENGINE: $GREASY_ENGINE"
# echo "GREASY_LAUNCHER: $GREASY_LAUNCHER"
# echo "GREASY_NODELIST: $GREASY_NODELIST"
# echo "GREASY_NWORKERS: $GREASY_NWORKERS"
# echo "GREASY_NWORKERS_PER_NODE: $GREASY_NWORKERS_PER_NODE"
# echo "GREASY_NTASKS_PER_WORKER: $GREASY_NTASKS_PER_WORKER"

# Run Greasy
# echo $MPIRUN $EXE $@
$MPIRUN $EXE $@

